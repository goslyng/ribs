clear all;

if isunix()
    pathPrefix = '/home/sameig/';
    dataPathUnix = '/usr/biwinas03/scratch-c/sameig/Data/dataset';
    christinePrefix = '/usr/biwinas03/scratch-c/tannerch/FUSIMO/ETHliver/dataset';
else
    pathPrefix = 'H:\';
    dataPathUnix = 'M:/dataset';
    christinePrefix = 'Q:\dataset';
end
addpath([pathPrefix '/codes/ribFitting/oldFiles/'])

runFittingSettings;

unix('source /home/sgeadmin/BIWICELL/common/settings.sh');

addpath([pathPrefix 'codes/ribFitting/registration/itkScripts/']);
addpath([pathPrefix 'codes']);
addpath([pathPrefix 'codes/ribFitting/shapeModeling']);

addpath([pathPrefix '\codes\mvonSiebenthal\mri_toolbox_v1.5\']);


%%
mriSubjects=[   60    61    63    64     66];
% mriSubjects=[  50   51    52    53    54   56    57    58    59    ];%60    61    63    64     66];

% mriSubjects= [  18 19 23 24 25];%];%[26 27 28 31 32 33 34];%

for s = mriSubjects

    okCycles{s}=1:50;

    
    load([dataPathUnix num2str(s)  '/allcycles_nrig10_masked.mat'],'cycleinfo');
    params{s}.cycleinfo = cycleinfo;
    params{s}.subjectPath =[dataPathUnix  num2str(s) ];
    params{s}.subjectPathLinux =[ '/usr/biwinas03/scratch-c/sameig/Data/dataset'  num2str(s) ];
    
    
    if ismember(s, [18 19 23 24 25 26 27 278 31 32 33 34])
        params{s}.stacksPath = [christinePrefix num2str(s) '/stacks_uncropped/' ] ;
    else
    	params{s}.stacksPath = [christinePrefix num2str(s) '/stacks/' ] ;

%         params{s}.stacksPath = [params{s}.subjectPath '/stacks/' ] ;

    end
    
    params{s}.dataPathUnix = dataPathUnix;
    params{s}.registrationPath = [dataPathUnix num2str(s) '/rib_registration/'];
    params{s}.angleBoundSpine = [0 0 0 ;0 0 0];
    params{s}.translationBoundSpine = [ -10 -50 -10; 10 50 10 ] ;
    
    
    params{s}.angleBound = [-0.04 -0.04 -0.04; 0.04 0.04 0.04];
    params{s}.translationBound = [ -10 -50 -10; 10 50 10 ] ;    
    params{s}.translationScale = 0.01;
    params{s}.outputTranslationFile=[ params{s}.registrationPath 'results/translation_spine_' num2str(s)  ];

	if s >=60
        params{s}.stateMiddleFix ='Exh';
        params{s}.fixedImage= [params{s}.subjectPathLinux '/masterframes/exhMaster.hdr'];
        params{s}.cycPrefix = 'cyc_';
        params{s}.maskPrefix = [params{s}.subjectPathLinux  '/masterframes/mask']
    else
        params{s}.stateMiddleFix =''; 
        params{s}.fixedImage= [params{s}.subjectPathLinux '/masterframes/exhMaster7_unmasked_uncropped.hdr'];
        
%         if (ismember(s,[50 51 52 53 54 58]))
%             params{s}.cycPrefix = 'original_5_cyc_';
%         else
        params{s}.cycPrefix = 'cyc_';
%         end

    end
    
    params{s}.okCycles = okCycles{s};
    params{s}.paramConvTol = 0.1;
    params{s}.functionConvTol = 0.1;
    params{s}.ribs = 7:10;
    
    a = avw_img_read([params{s}.subjectPath '/masterframes/spine']);
    s_=[];
    for z=1:size(a.img,3)
        [x y ]=find(a.img(:,:,z)==1);
        s_=[s_ [x' ;y';z*ones(1,length(x))]];
    end
    params{s}.meanP(:,1) = mean(s_').*a.hdr.dime.pixdim(2:4);
    for r = params{s}.ribs
        params{s}.registrationRotation{r}=[params{s}.registrationPath '/scripts/reg_rotation_sungrid' num2str(s) '_' num2str(r) '.sh'];
        params{s}.registrationRotation_missed{r} = [params{s}.registrationPath '/scripts/reg_rotation_sungrid_missed' num2str(s) '_' num2str(r) '.sh'];;
    end
   params{s}.o =[ 3 1 2];         
end


   
%% Create masks

for s = mriSubjects

    createSpineMask(s,0); 
    createRibMasks(s,0);
    
end


%% Save & Run Translation Scripts
for s = mriSubjects

    saveRegistrationForTranslationScripts(s,params{s});

end

%% Load and save the rigid transformation of the exhale states

for s = mriSubjects
    
    extractTranslationCyc(s,params{s});
    
end


%%

for s = mriSubjects
 
    saveRegistrationForRotationScripts(s,params{s});
    
end

for s = mriSubjects
    
    
    for r=7:10
        
        unix(['qsub ' params{s}.registrationRotation{r}]);
%         fprintf(1,['qsub ' params{s}.registrationRotation{r} '\n']);

    end
end


%%
for s = mriSubjects
    
    extractRotationCyc(s,params{s},okCycles{s},[]);%,,'bigMask');
    
end

for s = mriSubjects

    params{s}.missedCycs = computeP(s,params{s},okCycles{s},[]);%,,'bigMask');
end
%%
commands= [];
for s = mriSubjects

    params{s}.angleBound = [-0.3 -0.3 -0.3; 0.3 0.3 0.3]
    params{s}.translationBound = [ -15 -10 -15 ; 15 10 15 ];
    params{s}.registrationPathLinux = ['/home/sameig/M/dataset' num2str(s) '/rib_registration/'];

    commands_ = saveRegistrationForRotationScriptsBH(s,params{s});
    commands= [commands commands_];
end
%%

for s = mriSubjects(2:end)
    
    
%     params{s}.missedCycs = error_{s};
    saveRegistrationForRotationScriptsMissedCycles(s,params{s});

end


for s = mriSubjects(2:end)
    
    for r=params{s}.ribs
    
        if (~isempty(params{s}.missedCycs{r}))

            unix(['qsub ' params{s}.registrationRotation_missed{r}]);
        %         fprintf(1,['qsub ' params{s}.registrationRotation_missed{r} '\n']);
        end
    end
end

%%

%% Create Rib masks Series
 volumeFlag=0;
 s=23;
createRibMasksSeries(s,params{s},0,7:10,1:50,volumeFlag);
% exe= '/home/tannerch/progs/itk/ImageReadWrite3D' ;
% r=7;a=1;
% sourcePath = [dataPath num2str(s) '/stacks_test/stacksSeq/seqs/']
% mkdir([sourcePath '/mha/']);
% for a=1:100
% filePath1=[sourcePath '/file' num2str(a) '.img'];
% filePath2=[sourcePath '/mha/file' num2str(a) '.mha'];
% system([ exe '  ' filePath1 '  ' filePath2]);
% end

exe= '/home/tannerch/progs/itk/ImageReadWrite3D' ;

for r=7:10
    
    mkdir([dataPathUnix num2str(s)  '/mask_series/mask' num2str(r) '/mha/'])

    for a=1:60
        filePath1=[dataPathUnix num2str(s)  '/mask_series/mask' num2str(r) '/time' num2str(a) '.img'];
        filePath2=[dataPathUnix num2str(s)  '/mask_series/mask' num2str(r) '/mha/time' num2str(a) '.mha'];
        system([ exe '  ' filePath1 '  ' filePath2]);
    end
end

%%

close all
for s = mriSubjects
    
     load([params{s}.dataPathUnix num2str(s) '/motionfields/ribsMotion'])
%         load([params{s}.dataPathUnix num2str(s) '/motionfields/ribsMotionbigMask']);


    
   pN=1
    for r=7:10%params{s}.ribs
        start=1;
        endC = size(P{r},3);%120;%
        
%         [a b c]=princomp(squeeze(P{r}(:,pN,start:endC))');
%         
%         figure;plot(b(:,1))
    %         cor = corrcoef([bb{r}(:,1) bb{8}(:,1)]);
    %         cor(1:3,4:6)
            figure
% %             R = findEulerXfirst(angles_{r}(1,i),angles_{r}(2,i),angles_{r}(3,i)); % itk default order is ZXY
%             
            subplot(4,1,1)
            plot(squeeze(P{r}(1,pN,start:endC))')
            subplot(4,1,2)
% %             figure;
            plot(squeeze(P{r}(2,pN,start:endC))')
            subplot(4,1,3)
            plot(squeeze(P{r}(3,pN,start:endC))')
            subplot(4,1,1)
            title([num2str(r) ' ' num2str(s)])
    %         axis tight
    end
end

%%

close all
for s = mriSubjects
    
     load([params{s}.dataPathUnix num2str(s) '/motionfields/ribsMotion'])
%         load([params{s}.dataPathUnix num2str(s) '/motionfields/ribsMotionbigMask']);


    
   pN=100
    for r=7:10%params{s}.ribs
        start=1;
        endC = size(P{r},3);%120;%
        
            figure
            subplot(4,1,1)
            plot(squeeze(angles_{r}(1,start:endC))');%plot(squeeze(trans_{r}(1,start:endC))')
            subplot(4,1,2)
             plot(squeeze(angles_{r}(2,start:endC))');%plot(squeeze(trans_{r}(2,start:endC))')
            subplot(4,1,3)
            plot(squeeze(angles_{r}(3,start:endC))');%plot(squeeze(trans_{r}(3,start:endC))')
            subplot(4,1,1)
            title([num2str(r) ' ' num2str(s)])

    end
end


%%

figure;plot(trans_{r}')
for r=7:10
    for i=1:100
    t_r{r}(:,i) = trans{r}{i}(:,1);
    end
end

for r=7:10
    figure;plot(t_r{r}');
end

figure;plot(trans_{7}')
figure;plot(trans_{7}(2,:))
figure;plot(angles_{10}')
%%
close all
for s = mriSubjects

    load(params{s}.outputTranslationFile,'initialTranslation','initialRotation','t_','moved_center');

    figure; hold on;
    plot(t_{7}(:,1:end)')
    plot(t_{8}(:,1:end)')
    plot(t_{9}(:,1:end)')
    plot(t_{10}(:,1:end)')
    title(num2str(s))
%     trans_t=[];
%     for i=1:20
%         clear tmp;
%      tmp(1,:)= trans{7}{i}(1,:)-t_{7}(1,i);
%      tmp(2,:)= trans{7}{i}(2,:)-t_{7}(2,i);
%      tmp(3,:)= trans{7}{i}(3,:)-t_{7}(3,i);
%      trans_t = [trans_t tmp];
%     end
%     figure;plot(trans_t');
    
%     
%     figure;plot(t_{7}(:,1:end)')
%     figure;plot(t_{8}(:,1:end)')
%     figure;plot(t_{9}(:,1:end)')
%     figure;plot(t_{10}(:,1:end)')

%     figure;plot(initialTranslation')
%     title(num2str(s))
% 
%     figure;plot(initialRotation')
%     title(num2str(s))

end

